<UserControl x:Class="KretaDesktop.View.ContentView.ContentListSubjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KretaDesktop.View"
             xmlns:viewmodels="clr-namespace:KretaDesktop.ViewModel"
             xmlns:validations="clr-namespace:ValidationProject.Validations"
             xmlns:converter="clr-namespace:KretaDesktop.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converter:BoolToSortIconConverter x:Key="boolToIconConverter"></converter:BoolToSortIconConverter>
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"></converter:BoolToVisibilityConverter>
        <converter:InverseAndBooleansToBooleanConverter x:Key="InverseAndBooleansToBooleanConverter"></converter:InverseAndBooleansToBooleanConverter>
    </UserControl.Resources>
    <!--
    <UserControl.DataContext>
        <viewmodels:ContentListSubjectViewModel/>
    </UserControl.DataContext>
     -->
    <Grid Background="{DynamicResource ContentBackgraoundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock FontSize="24" HorizontalAlignment="Left"
               Foreground="{DynamicResource ContentForegroundColor}"
               Margin=" 16 16 2 2"
               Text="{DynamicResource contentListSubjectTitle}"
               >
        </TextBlock>
        <Expander Grid.Row="1" Header="{Binding ItemData}" Margin="0 24 2 2" Foreground="{DynamicResource ContentForegroundColor}" >
            <Grid Background="{DynamicResource ExpanderBackgroundColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition Width="200"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Button Style="{DynamicResource ContentButton}" 
                        Command="{Binding NewCommand}"
                        Margin="2 8 2 8" Grid.Row="0"  Grid.Column="1" Content="{DynamicResource buttonNew}">

                </Button>
                <Label Style="{DynamicResource FormLabel}" Grid.Row="1" Grid.Column="0"  Content="Azon."></Label>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="txtSubjectId" Style="{DynamicResource FormTextBox}"
                         IsReadOnly="True"
                         Text="{Binding DisplayedSubject.Id, Mode=TwoWay}"       
                />
                <Label Style="{DynamicResource FormLabel}" Grid.Row="2" Grid.Column="0" Content="Tantárgy név:"></Label>
                <TextBox Grid.Row="2" Grid.Column="1" x:Name="txtSubjectName" 
                         Style="{DynamicResource FormTextBox}"
                         Validation.ErrorTemplate="{StaticResource ValidationTemplate3}">
                    <TextBox.Text>
                        <Binding Path="DisplayedSubject.SubjectName" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validations:NameValidation/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center">
                    <Button Command="{Binding SaveCommand}"
                            CommandParameter="{Binding DisplayedSubject}"
                            Margin="2 2 2 4"    
                            Content="{DynamicResource buttonSave}"
                            >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ContentButton}">
                            </Style>
                        </Button.Style>
                        <Button.IsEnabled>
                            <MultiBinding Converter="{StaticResource InverseAndBooleansToBooleanConverter}" UpdateSourceTrigger="PropertyChanged">
                                <Binding ElementName="txtSubjectName" Path="(Validation.HasError)"/>
                            </MultiBinding>
                        </Button.IsEnabled>
                    </Button>
                    <Button Style="{DynamicResource ContentButton}" 
                            Command="{Binding DeleteCommand}" 
                            CommandParameter="{Binding DisplayedSubject}" 
                            Margin="4 2 2 2" Content="{DynamicResource buttonDelete}"
                            Visibility="{Binding NoWaitingForNewData,Converter={StaticResource boolToVisibilityConverter},UpdateSourceTrigger=PropertyChanged}">

                    </Button>
                </StackPanel>
            </Grid>
        </Expander>
        <Grid Grid.Row="2" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel  Grid.Column="0" Visibility="{Binding IsSortingVisible, Converter={StaticResource boolToVisibilityConverter}}" Orientation="Horizontal">
                <TextBlock  Margin="6 8 2 2" Foreground="{DynamicResource ContentForegroundColor}" Text="{DynamicResource tbSorting}"></TextBlock>
                <Button Style="{DynamicResource ContentButton}" Command="{Binding SortingCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding SortingAscending, Converter={StaticResource boolToIconConverter}}"/>
                        <TextBlock Text="{DynamicResource tbSortingLowerCase}"></TextBlock>
                    </StackPanel>
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="2">
                <TextBlock Style="{DynamicResource FormTextBlock}" Text="{DynamicResource tbFiltring}" Margin="64 8 2 2"></TextBlock>
                <TextBox x:Name="tbFiltringSubjectName" Style="{DynamicResource FormTextBox}" Margin="2 2 2 2"                     
                            Text="{Binding UserFiltringParameter,Mode=TwoWay}"
                            >
                </TextBox>
                <Button Style="{DynamicResource ContentButton}" Content="{DynamicResource buttonFind}" Command="{Binding SearchCommand}" Margin="2 2 2 2"/>
                <Button Style="{DynamicResource ContentButton}"  Content="{DynamicResource buttonFindAll}" Command="{Binding SearchAllCommand}" Margin="2 2 2 2"/>
            </StackPanel>
            <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="2,2,100,2">
                <TextBlock HorizontalAlignment="Right" Margin="2 8 2 2 " 
                           Foreground="{DynamicResource ContentForegroundColor}" 
                           Text="{DynamicResource tbRowPerPage}"></TextBlock>
                <ComboBox HorizontalAlignment="Right" Grid.Column="5" Margin="2 2 540 2"
                          Style="{DynamicResource FormComboBox}"
                          ItemContainerStyle="{DynamicResource FormComboBoxItem}"
                          ItemsSource="{Binding RowPerPagePossibilities}"
                          SelectedItem="{Binding PageSize}"
                          SelectedIndex="0"
                />
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="3"  Orientation="Horizontal">
            <DataGrid x:Name="dgSubjects"                 
                      ItemsSource="{Binding Subjects}"
                      SelectedItem="{Binding SelectedSubject}"                      
                      SelectedIndex="{Binding SelectedItemIndex}"
                      Style="{DynamicResource DataGridCrudStyle}"
                      Width="300"
                      ColumnHeaderStyle="{DynamicResource DataGridCRUDHeaderStyle}"
             >
                <DataGrid.Columns>
                    <DataGridTextColumn Width="40" Header="{DynamicResource id}" Binding="{Binding Id}"></DataGridTextColumn>
                    <DataGridTextColumn Width="220" Header="{DynamicResource subjectName}" Binding="{Binding SubjectName}"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Style="{DynamicResource ContentButton}" 
                    VerticalAlignment="Bottom"
                        Command="{Binding DeleteCommand}" 
                        CommandParameter="{Binding SelectedSubject}" 
                        Margin="100 2 2 2" Grid.Row="1" Grid.Column="2" Content="{DynamicResource buttonDelete}">
            </Button>
        </StackPanel>
        <Grid Background="{DynamicResource NavigationBackgroundColor}" Grid.Row="5" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Button x:Name="btFirstPage"  Style="{DynamicResource ContentButton}" Command="{Binding FirstPageCommand}" Content="&lt;&lt;" Grid.Column="0" />
            <Button x:Name="btPreviusPage" Style="{DynamicResource ContentButton}" Command="{Binding PreviusPageCommand}" Content="&lt;" Grid.Column="1" />
            <StackPanel Orientation="Horizontal" Grid.Column="2">
                <Label x:Name="Page" Foreground="{DynamicResource ContentForegroundColor}" Content="{DynamicResource tbPage}"></Label>
                <Label x:Name="tbCurrentPage" Foreground="{DynamicResource ContentForegroundColor}" Content="{Binding CurrentPage}"/>
                <Label Content="/"></Label>
                <Label x:Name="tbNumberOfPage" Foreground="{DynamicResource ContentForegroundColor}" Content="{Binding NumberOfPage}"/>
            </StackPanel>
            <Button x:Name="btNextPage" Style="{DynamicResource ContentButton}" Command="{Binding NextPageCommand}" Content=">" Grid.Column="3" />
            <Button x:Name="btLastPage" Style="{DynamicResource ContentButton}" Command="{Binding LastPageCommand}" Content=">>" Grid.Column="4" />
        </Grid>
    </Grid>
</UserControl>
