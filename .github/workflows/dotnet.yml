# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous delivery pipeline is meant to be triggered on release, anytime a user pushes code associated to a git tag,
# and will run against multiple configurations and production environments.
# This pipeline builds the Wpf project based upon the configuration matrix below.  In order to
# create different channels of the application, the pipeline uses the Package.Identity.Name defined in the
# Package.appxmanifest in the Windows Application Packaging Project to uniquely identify the application,
# depending on which channel is being built.
# Once the MSIX is created for each channel configuration, the agent archives the AppPackages folder, then creates
# a Release with the specified git release tag. The archive is uploaded to the release as an asset for storage or distribution.
name:  Kreta - futtatható program

# Trigger on any push with a git tag
# To create a git tag, run the following commands on the branch you wish to release:
#   git tag 1.0.0.0
#   git push origin --tags
on:
  push:
    #tags:
    #  - '*'
    branches: [ "production-desktop" ]
  pull_request:
    branches: [ "production-desktop" ]

env:
 PROJECT_PATH: KretaDesktop/KretaDesktop.csproj

jobs:
 deploy:
  runs-on: windows-latest
  steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - run: dotnet restore  ${{ env.PROJECT_PATH }} -r win-x64

    - run: dotnet build  ${{ env.PROJECT_PATH }} -c Release  --no-restore -p:PublishSingleFile=true

    - run: dotnet publish ${{ env.PROJECT_PATH }} -c Release  -r win-x64 --self-contained false -p:PublishSingleFile=true --no-build --output ./publish

    - uses: actions/create-release@v1
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
    - run: |
           dir
           cd publish
           dir
    - uses: csexton/release-asset-action@v2
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: ./publish/*.*
          release-url: ${{ steps.create_release.outputs.upload_url }}
